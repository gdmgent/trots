// -----------------------------------------------------------------------------
// This file contains very basic styles.
// -----------------------------------------------------------------------------

/**
 * Set up a decent box model on the root element
 */
html {
  box-sizing: border-box;
  background-color: #333;
}

/**
 * Make all elements from the DOM inherit from the parent box-sizing
 * Since `*` has a specificity of 0, it does not override the `html` value
 * making all elements inheriting from the root box-sizing value
 * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */
*, *::before, *::after {
  box-sizing: inherit;
}

body {
  background-color: #333;
  min-height: 100vh;
  height: 100vh;
  &.nav-open {
    overflow: hidden;
  }
  @include opacity(0);
  @include animation(buildup 0.6s 0.5s ease-in forwards);
}
.wrapper {
  //min-height: 100vh;
  background-color: white;
}
main {
}

/**
 * Basic styles for links
 */
a {
  color: $primary;
  text-decoration: none;

  @include on-event {
    color: $text-color;
    text-decoration: none;
  }
}

.flex {
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  &.justified-c {
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center;
  }
  &.justified-start {
    -webkit-justify-content: flex-start;
    -ms-flex-pack: start;
    justify-content: flex-start;
  }
  &.justified-end {
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end;
  }
  &.justified-c {
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center;
  }
  &.centered {
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
  }
  &.start {
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
  }
  &.column {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
  &.align-stretch {
    -webkit-align-items: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
  &.wrap {
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
  }
}

.flex-child {
  &.stretch {
    -webkit-flex: 1 1 auto;
    -ms-flex: 1 1 auto;
    flex: 1 1 auto;
    -webkit-align-self: stretch;
    -ms-flex-item-align: stretch;
    align-self: stretch;
  }
  &.end {
    -webkit-align-self: flex-end;
    -ms-flex-item-align: end;
    align-self: flex-end;
  }
  &.start {
    -webkit-align-self: flex-start;
    -ms-flex-item-align: start;
    align-self: flex-start;
  }
  &.center {
    -webkit-align-self: center;
    -ms-flex-item-align: center;
    align-self: center;
  }
  &.justified-c {
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center;
  }
}
$padded: 25;
$paddedXL: $padded * 2;
$paddedXXL: $padded * 3;
.padded {
  &-top {
    padding-top: $padded+px;
    &-xl{
      padding-top: $paddedXL+px;
    }
    &-xxl{
      padding-top: $paddedXXL+px;
    }
  }
  &-left {
    padding-left: $padded+px;
    &-xl{
      padding-left: $paddedXL+px;
    }
    &-xxl{
      padding-left: $paddedXXL+px;
    }
  }
  &-bottom {
    padding-bottom: $padded+px;
    &-xl{
      padding-bottom: $paddedXL+px;

      @media (max-width: $sm){
        padding-bottom: $padded+px;
      }
    }
    &-xxl{
      padding-bottom: $paddedXXL+px;
    }
  }
  &-right {
    padding-right: $padded+px;
    &-xl{
      padding-right: $paddedXL+px;
    }
    &-xxl{
      padding-right: $paddedXXL+px;
    }
  }
}
.pos {
  &-rel{
    position: relative;
  }
  &-abs{
    position: absolute;
  }
  &-fix{
    position: fixed;
  }
}

@media (min-width: $xxl){
  .hide-xxl {
    display: none;
  }
}
@media (min-width: $md) and (max-width: $xl){
  .hide-xl {
    display: none;
  }
}
@media (min-width: $sm) and (max-width: $md){
  .hide-md {
    display: none;
  }
}
@media (min-width: $xsm) and (max-width: $sm){
  .hide-sm {
    display: none;
  }
}
@media (min-width: $xxsm) and (max-width: $xsm){
  .hide-xsm {
    display: none;
  }
}
@media (max-width: $xxsm){
  .hide-xxsm {
    display: none;
  }
}
